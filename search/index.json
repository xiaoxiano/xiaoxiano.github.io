[{"content":"Ubuntu常用命令 文件 i 键可以对文件进行修改， Esc + :+ wq 退出并保存修改之后的文件\nsudo gedit ~/File //编辑 sudo mv //移动文件 touch File //新建文件 sudo rm -r Folder //删除文件夹 安装包  apt  sudo apt update \u0026amp;\u0026amp; apt upgrade //更新 dpkg --list //显示所有软件 sudo apt-get install 包名 //安装 sudo apt-get remove 包名 //卸载不删除配置文件 sudo apt-get --purge remove 包名 //软件及其配置文件一并删除  snap  sudo snap list //列出已经安装的snap包 sudo snap install \u0026lt;snap name\u0026gt; //安装一个snap包 sudo snap refresh \u0026lt;snap name\u0026gt; //更新一个snap包，如果后面不加包的名字更新所有的snap包 sudo snap remove \u0026lt;snap name\u0026gt; //删除一个snap包 脚本 set -eux #-e 若指令传回值不等于0，则立即退出shell。0表示没有错误 #-u 当执行时使用到未定义过的变量，则显示错误信息。 #-x 执行指令后，会先显示该指令及所下的参数。 繁忙中，待续\nshell 原文地址\nname=\u0026#34;MyName\u0026#34; //定义变量 echo $name 或 echo ${name} //使用变量 val=`expr 2 + 2` #expr 是一款表达式计算工具，使用它能完成表达式的求值操作。 echo \u0026#34;Total value : $val\u0026#34;    特殊变量 含义     $0 当前脚本的文件名   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   $n 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   $# 传递给脚本或函数的参数个数总和   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   $* 传递给脚本或函数的所有参数，当被双引号 \u0026quot; \u0026quot; 包含时，所有的位置参数被看做一个字符串   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   $@ 传递给脚本或函数的所有参数，当被双引号 \u0026quot; \u0026quot; 包含时，每个位置参数被看做独立的字符串   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   $? 上个命令的退出状态，或函数的返回值   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   $$ 当前 Shell 进程 ID。对于 Shell 脚本，就是这些脚本所在的进程 ID。       比较符 描述     -eq，equal 等于   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   -ne，not equal 不等于   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   -gt，greater than 大于   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   -lt，lesser than 小于   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   -ge，greater or equal 大于或等于   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   -le，lesser or equal 小于或等于       -z 检测字符串长度是否为 0，为 0 返回 true。     -e file 检测文件（包括目录）是否存在，如果是，则返回 true。   \u0026mdash;\u0026mdash;\u0026ndash; \u0026mdash;\u0026mdash;\u0026ndash;   -f file 检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。    待续\n","date":"2021-07-22T00:00:00Z","permalink":"https://www.jiangdaoli.cf/p/ubuntu/","title":"Ubuntu常用命令"},{"content":"部分电脑配置记录 前言 请自备代理，查看端口，允许局域网,标注历史均为历史配置，仅作参考不推荐使用\nwin10 config  git  git config --global http.https://www.github.com.proxy socks5://127.0.0.1:port.socks git config --global https.https://www.github.com.proxy socks5://127.0.0.1:port.socks C:\\Users\\90487\\.gitconfig #文件路径，90487是我的用户名\n Terminal（历史）  set http_proxy=http://127.0.0.1:port.http #临时命令行代理 set https_proxy=http://127.0.0.1:port.http #临时命令行代理 VM Ubuntu config   代理\nWindows中使用ipconfig查看VMware Network Adapter VMnet8的ip地址，ubuntu中进入“设置”-“网络”-“proxy”，在Socks Host里写入之前查到的ip地址\n  git config\n  git config --global user.name \u0026#34;John Doe\u0026#34; #配置github账号用户名 git config --global user.email johndoe@example.com #配置邮箱  git ssh 代理  创建~/.ssh/config 文件：\nHost github.com User git ProxyCommand nc -v -x ip:port.socks %h %p #写自己ip   终端代理（历史，已弃用）\n  方法一：直接在命令前加proxychains\n  方法二：直接在.bashrc最后加入：\n    export http_proxy=\u0026#34;http://ip:port.http\u0026#34; #写自己ip export https_proxy=\u0026#34;http://ip:port.http\u0026#34; #写自己ip source ~/.bashrc #使配置生效 Ubuntu安装go sudo apt install snap #安装snap，使用snap更易安装、更新 sudo snap install go --classic #安装go sudo vim /etc/profile #编辑profile export GOROOT=/snap/go #在最后一行添加 export PATH=$PATH:$GOROOT/bin source /etc/profile go version #验证 go env -w GO111MODULE=on go env -w GOPROXY=https://goproxy.io,direct #go get 设置为国内源 Goland 使用 goland无限试用，方法适用IDEA系列\n goland中添加第三方插件仓库地址：https://plugins.zhile.io 安装插件：IDE Eval Reset 下载 直接把zip包拖进IDE的窗口来进行插件的安装 Help -\u0026gt; Eval Reset 勾选Auto reset before per restart  原文地址，本段仅进行简述，使操作简明\n不能输入中文 在goland.sh注释之后的首行添加\nexport XMODIFIERS=\u0026#34;@im=ibus\u0026#34; export GTK_IM_MODULE=\u0026#34;ibus\u0026#34; export QT_IM_MODULE=\u0026#34;ibus\u0026#34; goland.vmoptions添加-Drecreate.x11.input.method=true\nwindows flutter 待写\n自用软件 本文软件均为自用，本人无意推广任何软件，所以下载地址请自行查找，一般在google可找到官方，或者在52论坛搜搜看\n软件的设置过于复杂且个性化，不做过多介绍自己慢慢玩吧\nwin10优雅必备   Wallpaper Engine　#壁纸，steam购买\n  Everything + uTools　#文件快捷搜索及工具\n  quicker　#鼠标便捷操作\n  DeskGo　#腾讯出品的桌面软件格子\n  Geek Uninstaller　#卸载无残留\n  clover　#资源管理器多标签页\n  火绒　#屏蔽弹窗\n  typora　#markdown记事本，据说notion在线笔记，我把博客当作在线笔记了\n  win10 microsoft store工具\n Windows Terminal　#命令行 TranslucentTB　#任务栏透明 EarTrumpet　#音频管理    安卓app   浏览器：Chrome、Kiwi、Via\n  影视：整点视频 + AdGuard　# AdGuard设置复杂请自行研究，去除开头广告可在日志中拦截mp4字样文件\n  音乐：倒带、QMD　# 并不完美，希望找到更全更好用的\n  小说：笔趣阁　# 这是个蓝底app，52纯净多源\n  去除启动广告：启动加速　#有后台权限且更好用\n  其他\n 向日葵远程控制 接听宝　#代接电话 zarchiver　#文件管理和解压 星空视频壁纸 福昕PDF阅读器    暂时介绍这些，适用于专业领域的以后看情况再说，如果有其它好用的请赐教，感谢\n","date":"2021-07-18T00:00:00Z","permalink":"https://www.jiangdaoli.cf/p/config/","title":"环境配置和软件"},{"content":"前言 本文仅为个人投资记录，不构成投资建议，A股人均韭菜请谨慎，美股放水暂不讨论\n希望和股友交流发现好股，欢迎留言，股票特点请简短\n本人买入   国恩股份：发文时(2021-07-13)收盘价24.38\n 可降解塑料概念，同类中估值较低    渝农商行：发文时(2021-07-13)收盘价3.94\n 感觉被低估    观察中   微芯生物：\n  创新药，带头人不是半路出家，低位期及销量增长期可能将近\n  大股东持续大量减持\n    天建集团：\n  估值较低，业绩可能新一轮增长\n  行业处于高位，未来下行概率较大\n    历史 买入 国恩股份：发文时(2021-07-13)收盘价24.38\n渝农商行：发文时(2021-07-13)收盘价3.94\n卖出 暂无，本人持股周期较长\n","date":"2021-07-13T00:00:00Z","permalink":"https://www.jiangdaoli.cf/p/investment/","title":"投资记录"},{"content":"准备 1.Ubuntu\nsudo apt update #更新 2.github账号\n3.git配置\ngit config --global user.name \u0026#34;John Doe\u0026#34; #配置github账号用户名 git config --global user.email johndoe@example.com #配置邮箱 4.连接github\nssh-keygen -t ed25519 -C \u0026#34;your_email@example.com\u0026#34; #生成SSH Keys 此为新版 ssh-keygen -t rsa -b 4096 -C \u0026#34;your_email@example.com\u0026#34; #此为常用版 cat ~/.ssh/id_ed25519.pub #复制 点击github右上角头像-\u0026gt; Settings -\u0026gt; SSH and GPG Keys -\u0026gt; New SSH key添加\nssh -T git@github.com #验证连接，输入yes 官方文档\n5.git ssh 代理设置\n非必要步骤，如果有一天ssh push网速极慢但https push正常，可尝试此操作\n创建~/.ssh/config 文件：\nHost github.com User git ProxyCommand nc -v -x 127.0.0.1:10808 %h %p #请修改127.0.0.1:10808 安装 snap install hugo --channel=extended #安装hugo hugo version #验证 hugo new site myblog #创建博客 git init #初始化 git remote add origin git@github.com:**** #连接远程仓库 git clone https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack #安装stack主题 rm config.toml \u0026amp;\u0026amp; cp themes/hugo-theme-stack/exampleSite/config.yaml . #使用主题的配置文件 把myblog/themes/hugo-theme-stack/exampleSite/content内容移到myblog/content使用主题示例文章\n本地预览： myblog下执行\nhugo server 浏览器打开：\nhttp://localhost:1313/ #目前本地运行不显示文章目录，估计是操作系统原因 部署 注：我将介绍使用github存放源码，如果您仅在本地存放源码，提交public文件夹即可，无需使用下列方法。\n1.虽然博客内容全都能看到，但我们可能不太希望公开个人配置，不开放源码使用github pages需要创建2个仓库: 创建 username.github.io.source 仓库存放源码可设为私人仓库，创建 username.github.io 仓库作为公开仓库\n点击github右上角头像-\u0026gt; Settings -\u0026gt; Developer Settings-\u0026gt; Personal access tokens -\u0026gt; Generate new token #Note随意，Select scopes全选,复制token，我们这里使用Personal tokens比Deploy keys更方便\n找到源码仓库Settings-\u0026gt; Secrets -\u0026gt; New repository secret #Name写PERSONAL_TOKEN，Value粘贴token\n2.创建github actions的workflows自动部署文件：\nmkdir -p .github/workflows \u0026amp;\u0026amp; touch ~/myblog/.github/workflows/main.yml 粘贴脚本：\nname: github pages on: push: branches: - master jobs: deploy: runs-on: ubuntu-latest #可使用指定版本，例：runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: latest #可使用指定版本，例：hugo-version: \u0026#39;0.83.1\u0026#39; extended: true - name: Build run: hugo --gc --forceSyncStatic --minify --cleanDestinationDir - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: personal_token: ${{ secrets.PERSONAL_TOKEN }} # PERSONAL_TOKEN是源码仓库secrets的name external_repository: username/username.github.io # Pages 远程仓库 publish_branch: master # 部署的分支 publish_dir: ./public commit_message: ${{ github.event.head_commit.message }} #cname: www.example.com # 使用自定义域名 只需更改external_repository: username/username.github.io 为你的github账户名，脚本详情\n3.在myblog文件夹下创建deploy.sh\ntouch deploy.sh 粘贴脚本：\n#!/bin/bash echo -e \u0026#34;\\033[0;32mDeploying updates to GitHub...\\033[0m\u0026#34; # Add changes to git. git add . # Commit changes. msg=\u0026#34;rebuilding site `date`\u0026#34; if [ $# -eq 1 ] then msg=\u0026#34;$1\u0026#34; fi git commit -m \u0026#34;$msg\u0026#34; # Push source and build repos. git push origin master 在myblog下运行 sh deploy.sh命令\n到此已完成部署，之后任何更新如上运行deploy脚本即可\n修改主题 此处仅列举常见需修改内容，更多内容请看stack主题文档\n本博客修改样式来自rmdhnreza\n更多定制文章可以参考这里\n主题配置 1.修改~/myblog/config.yaml\n1 baseurl: https://username.github.io #改为自己的 2 languageCode: zh-CN #中文编码 5 title: Example Site #博客名 15 DefaultContentLanguage: zh-cn #中文 29 since: 2021 37 emoji: 🍥 #头像角标 41 src: img/avatar.png #头像，myblog/themes/hugo-theme-stack/assets/img 132 name: \u0026#39;首页\u0026#39; #改中文左侧菜单home 152 startLevel: 1 #从文章1级标题使用文章目录 2.左侧菜单栏 ~/myblog/content/page用于左侧菜单，请自定义\n2 title: \u0026#39;关于\u0026#39; #中文左侧菜单about，后同 3.覆盖主题样式\n我使用了rmdhnreza(https://github.com/rmdhnreza/rmdhnreza.my.id)修改的样式，直接在~/myblog下复制他的assets、layouts文件夹\n另外修改：\n  ~/myblog/assets/scss/variables.scss\n link-background-color: 0, 255, 255 链接背景颜色    注：浏览器可能缓存样式，可使用无痕模式\n创建文章 hugo new post/文件夹名/index.md #创建文章 写文章：\n1.front matter:\n--- title: hugo使用stack主题搭建博客及部署 #标题 description: 搜索了搭建博客教程，仍花费我几天时间，本文旨在更全面简洁 #副标题 date: 2021-07-04 #日期 lastmod: 2021-07-27 #上次修改内容的日期 slug: hugo-blog #URL的尾部，用于文章地址 categories: #文章分类 - blog --- front matter仅列举本文使用，hugo front matter官方文档\n2.常见文章markdown语法：\n  # 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n  `单行代码` \n`` 有`需用双反引号 ``\n  ```html\n多行代码\n```\n  [链接](https://)\n  \\ 写在特殊符号前为转义；写在行尾为换行\\\n  *斜体*\n**加粗**\n  * 无序列表\n双空格* 子无序列表\n  ![图片描述](本地图片.jpg)\n  表格\n  | Italics | Bold | Code | | -------- | -------- | ------ | | *italics* | **bold** | `code` |  {{\u0026lt; spoiler text=\u0026ldquo;点击展开和折叠代码\u0026rdquo; \u0026gt;}}\n```html\ncode\n```\n{{\u0026lt; /spoiler \u0026gt;}}  评论系统 waline官方文档写得非常清楚，您只需 LeanCloud设置 和 部署到Vercel ，拿到URL\n然后修改~/myblog/config.yaml\n52 provider: waline #评论系统，本文示例使用waline 73 serverURL: https:// #评论系统URL用你自己的 执行sh deploy.sh即可\n自定义域名 在~/myblog/config.yaml修改baseurl: https://username.github.io\n在~/myblog/.github/workflows/main.yml最后一行取消注释并修改#cname: www.example.com\n执行sh deploy.sh即可\n启用https：参考链接\n没有域名？\n为了白嫖可在freenom和cloudflare申请域名和解析，并使用freenom脚本自动续期，这可能花费一些时间，如对此没有了解建议暂时跳过自定义域名。\n","date":"2021-07-03T00:00:00Z","permalink":"https://www.jiangdaoli.cf/p/hugo-blog/","title":"hugo使用stack主题搭建博客及部署"}]